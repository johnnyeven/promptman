kind: pipeline
name: default
type: docker
volumes:
  - name: temp
    temp: {}
  - name: host
    host:
      path: /var/run/docker.sock
  - name: config
    host:
      path: /data/eden/.eden.yaml
steps:
  - name: main_ship
    image: registry.cn-hangzhou.aliyuncs.com/eden-framework/golang-onship:1.19
    pull: always
    commands:
      - eden ci ship --push
    environment:
      GOENV: PROD
    when:
      branch:
        include:
          - main
        exclude: []
    volumes:
      - name: temp
        path: /go
      - name: host
        path: /var/run/docker.sock
      - name: config
        path: /root/.eden.yaml
  - name: main_deploy
    image: registry.cn-hangzhou.aliyuncs.com/eden-framework/golang-ondeploy:1.0
    pull: always
    commands:
      - eden ci deploy --env=PROD
    environment:
      GOENV: PROD
    when:
      branch:
        include:
          - main
        exclude: []
    volumes:
      - name: temp
        path: /go
      - name: host
        path: /var/run/docker.sock
      - name: config
        path: /root/.eden.yaml
  - name: notify
    image: plugins/webhook
    settings:
      urls: https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=c4166d5b-7af7-434c-a937-31a0856e2748
      content_type: application/json
      template: |
        {
          "msgtype": "markdown",
          "markdown": {
            "content": "{{#success build.status}}✅{{else}}❌{{/success}} **{{ repo.owner }}/{{ repo.name }}** (Build #{{build.number}})\n
                        >**构建结果**: {{ build.status }}
                        >**构建详情**: [点击查看]({{ build.link }})
                        >**代码分支**: {{ build.branch }}
                        >**提交标识**: {{ build.commit }}
                        >**提交发起**: {{ build.author }}
                        >**提交信息**: {{ build.message }}"
          }
        }
    when:
      status:
        - success
        - failure
